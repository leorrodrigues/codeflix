steps:
  - id: 'Decrypting credentials'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=./backend/storage/credentials/gcp/service-account.json.enc
      - --plaintext-file=./backend/storage/credentials/gcp/service-account.json
      - --location=global
      - --keyring=micro-videos
      - --key=service-account

  - id: 'Running docker-compose'
    name: 'gcr.io/$PROJECT_ID/docker-compose'
    args: ['-f','docker-compose.prod.yaml', 'up', '-d']
    env:
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=code-micro-videos-bucket
      - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/code-micro-videos-bucket
      - TESTING_PROD=true
    
  - id: "Chown in /var/www"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-u','root','-t','app','chown','-R','www-data:www-data','/var/www']

  - id: 'Running composer'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','bash -c "cd backend && composer install"']

  - id: 'Copying .env'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', './backend/.env.example','./backend/.env']

  - id: 'Copying .env.testing'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', './backend/.env.testing.example','./backend/.env.testing']

  - id: 'Running key:generate'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'exec','-t','app','php','/var/www/backend/artisan','key:generate']

  - id: 'Running migrations'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'exec','-t','app','php','/var/www/backend/artisan','migrate']

  - id: 'Running PhpUnit'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'exec','-t','app','php','/var/www/backend/vendor/bin/phpunit','-c','/var/www/backend/phpunit.xml']
